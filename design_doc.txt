There are four main modules to be used in this project,
Including:
Battleship module, which will hold the starting information
after the players set up the game, 

Data structures in battleship and their interpretation:
A dictionary of 
  key : ships
  value : list of coordinate and the status of the coordinate
 

State module: which contains information revelant to both 
players as the game progresses, as in
  Which player is to move
  Where that players ships are located
  Where that player has targeted
  Which ships the player has currently alive
  And which ships of the opponent that the player has sunk

  What we need currently in state:
  For the player1:
    We need to know where player1 targeted, so that we can display his targets with
       either unknown (untargeted), hit (hit a ship of player2) or miss (miss a ship of player2)

      - data structures 
        We need to update dictionary of player 2, marking hits if player1 hits player 2
        We need an dictionary to store where player 1 has targeted, e,.g the coordinate, and whether that coordinate was a hit or miss

    Need to know the damage status of player1, so that we can display the status
      with either : No ship at location, hit (player 2 hit player1) or NotHit (player1's ship at coordinate safe)

     - data structures 
      We need to take the dictionary of player1, and have it display which coordinate of player1 ships were hit or safe

  And the same for player2 as well

Main module: 
  which starts the game
  COntaining: game printing data


12/5 Changes to AI and State
Hence, State will now only track changes that players make
AI changes will all be kept in their own separate ai files
There will be an easy AI file, medium AI file and hard AI file

Hard AI

The Hard AI works in this manner:
It has a guess stage where it goes across the board, 
  THE GUESS PROCEDURE:
  Randomly Guess 
  If it hits a ship, in which case it enters the hit stage, 
  store the horizontal and vertical tiles around the ship

The hit stage works like this:
  If the ship is sunk, go back in the guess procedure
  Otherwise choose horizontal targeting 
    - if there is no hit on either horizontal side 
      - switch to a vertical target and accumulate vertical targets
    - continue until the ship is sunk

